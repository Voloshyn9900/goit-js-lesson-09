{"mappings":"AAQA,IAAIA,KAAO,qBAELC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAaC,KAAKC,SAAW,GAEnCC,YAAW,WACLH,GACFF,EAAQ,kEAGiCC,EAApC,mD,GACN,I,IASL,SAASK,YAAYC,GACnBC,QAAQC,IAAI,8BACZD,QAAQC,IAAI,KAAcC,OAAPH,IAEjBV,KAAKU,EACPC,QAAQC,IAAIZ,K,CAGd,SAASc,WAAWC,GAClBJ,QAAQC,IAAI,4BACZD,QAAQC,IAAI,KAAaC,OAANE,IAEjBf,KAAKe,EACPJ,QAAQC,IAAIZ,K,CAnBdW,QAAQC,IAAIZ,MAEZC,QAAQe,KAAKP,YAAaK,YAE1BH,QAAQC,IAAIZ","sources":["src/js/07-promise-api.js"],"sourcesContent":["/*\n * Создание промиса\n *  - Класс Promise\n *  - resolve\n *  - reject\n *  - Promise.prototype.then(onResolve, onReject)\n */\n\nlet data = \"тут еще ничего нет\";\n\nconst promise = new Promise((resolve, reject) => {\n  const canFulfill = Math.random() > 0.5;\n\n  setTimeout(() => {\n    if (canFulfill) {\n      resolve('Промис выполнился успешно, с результатом (исполнен, fulfilled)');\n    }\n\n    reject('Промис выполнился с ошибкой (отклонён, rejected)');\n  }, 1000);\n});\n\nconsole.log(data);\n\npromise.then(onFulfilled, onRejected);\n\nconsole.log(data);\n\nfunction onFulfilled(result) {\n  console.log('onFulfilled -> onFulfilled');\n  console.log(`✅ ${result}`);\n\n  data = result;\n  console.log(data);\n}\n\nfunction onRejected(error) {\n  console.log('onRejected -> onRejected');\n  console.log(`❌ ${error}`);\n\n  data = error;\n  console.log(data);\n}\n\n/*\n * Цепочки промисов (chaining)\n * Promise.prototype.catch(error)\n * Promise.prototype.finally()\n */\n\n// promise\n//   .then(onFulfilled)\n//   .then(x => {\n//     console.log(x);\n\n//     return 10;\n//   })\n//   .then(y => {\n//     console.log(y);\n//   })\n//   .catch(error => console.log(error))\n//   .finally(() => console.log('Я буду выполнен в любом случае'));\n\n\n\n\n//////////////////////////////////////////\n\n// const promise = new Promise((resolve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n//   setTimeout(() => {\n//     if (canFulfill) {\n//       resolve('Промис выполнился успешно с результатом (исполнен, Fulfilled)');\n//     }\n//     reject('Промис выполнился с ошибкой (отклонен, Reject)');\n//   }, 3000);\n// });\n\n// console.log(promise);\n\n// promise.then(\n//   result => {\n//   console.log(result);\n//   },\n//   error => {\n//   console.log(error);\n// })\n\n\n\n"],"names":["data","promise","Promise","resolve","reject","canFulfill","Math","random","setTimeout","onFulfilled","result","console","log","concat","onRejected","error","then"],"version":3,"file":"07-promise-api.63568a65.js.map"}