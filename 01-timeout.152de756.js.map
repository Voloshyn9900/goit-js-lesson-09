{"mappings":"YAkCA,IAAMA,EAAS,SAAAC,GACbC,QAAQC,IAAI,aAA0BC,OAALH,EAAK,sC,EAG1BI,EAAUC,WAAWN,EAAQ,IAAM,KACnCO,EAAWD,WAAWN,EAAQ,IAAM,KAE1CE,QAAQC,IAAIE,GACZH,QAAQC,IAAII,GAEZ,IAAMC,EAAoBC,KAAKC,SAAW,GAC1CR,QAAQC,IAAIK,GAERA,GACFG,aAAaN,E","sources":["src/js/01-timeout.js"],"sourcesContent":["import '../css/common.css';\n\n/*\n * Метод window.setTimeout(callback, delay, args)\n */\n\n// console.log('До вызова setTimeout');\n\n// setTimeout(() => {\n//   console.log('Внутри callback для setTimeout');\n// }, 2000);\n\n// console.log('После вызова setTimeout');\n\n\n// const logMessage = (x) => {\n//   console.log(x);\n//   console.log(\"Лог при вызове callback-функции через 3 секунды\");\n// }\n// setTimeout(logMessage, 3000, 125);\n\n// console.log('После вызова setTimeout');\n\n// setTimeout((x) => {\n//   console.log(x);\n//   console.log('Внутри callback для setTimeout');\n// }, 4000, 225);\n\n////////////////////////////////////////\n\n/*\n * Очистка таймаута с clearTimeout(timeoutId)\n */\n\nconst logger = time => {\n  console.log(`Лог через ${time}ms, потому что не отменили таймаут`);\n};\n\nconst timerId = setTimeout(logger, 2000, 2000);\nconst timerId2 = setTimeout(logger, 2000, 2000);\n\nconsole.log(timerId);\nconsole.log(timerId2);\n\nconst shouldCancelTimer = Math.random() > 0.3;\nconsole.log(shouldCancelTimer);\n\nif (shouldCancelTimer) {\n  clearTimeout(timerId);\n}\n"],"names":["$6cda7cae63cad14f$var$logger","time","console","log","concat","$6cda7cae63cad14f$var$timerId","setTimeout","$6cda7cae63cad14f$var$timerId2","$6cda7cae63cad14f$var$shouldCancelTimer","Math","random","clearTimeout"],"version":3,"file":"01-timeout.152de756.js.map"}