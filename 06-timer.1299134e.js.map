{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECNX,IAAMgB,EAAO,CACXC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,UAAWH,SAASC,cAAc,kBAGpCG,EAyCC,W,sBAzCKC,EACQC,G,IAAAC,EAAAD,EAAEC,O,aACZC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKD,OAASA,EAEdC,KAAKG,M,iBAGPlB,IAAA,O,MAAA,WACE,IAAMmB,EAAOC,EAAkB,GAC/BL,KAAKD,OAAOK,E,IAGdnB,IAAA,Q,MAAA,W,WACE,IAAIe,KAAKE,SAAT,CAGA,IAAMI,EAAYC,KAAKC,MACvBR,KAAKE,UAAW,EAEhBF,KAAKC,WAAaQ,aAAY,WAC5B,IAGML,EAAOC,EAHOE,KAAKC,MACOF,GAIhCI,EAAKX,OAAOK,E,GACX,IAZD,C,IAeJnB,IAAA,O,MAAA,WACE0B,cAAcX,KAAKC,YACnBD,KAAKE,UAAW,EAChB,IAAME,EAAOC,EAAkB,GAC/BO,QAAQC,IAAIT,GACZJ,KAAKD,OAAOK,E,OAKf,GAADd,EAAKC,SAASuB,iBAAiB,SAAS,WACtCC,EAAMC,O,IAER1B,EAAKI,QAAQoB,iBAAiB,SAAS,WACrCC,EAAME,M,IAIR,IAAMF,EAAQ,IAAInB,EAAM,CAAEG,OAG1B,SAAyBD,G,IAAEoB,EAAFpB,EAAEoB,MAAOC,EAATrB,EAASqB,KAAMC,EAAftB,EAAesB,KACtC9B,EAAKK,UAAU0B,YAAc,GAAYC,OAATJ,EAAM,KAAWI,OAARH,EAAK,KAAQG,OAALF,E,IAGnD,SAASf,EAAkBD,GAMzB,MAAO,CAAEc,MALKK,EACZC,KAAKC,MAAMrB,EAAS,MAAyB,OAI/Be,KAFHI,EAAIC,KAAKC,MAAMrB,EAAS,KAAoB,MAEnCgB,KADTG,EAAIC,KAAKC,MAAMrB,EAAS,IAAc,M,CAIrD,SAASmB,EAAIpD,GACX,OAAOuD,OAAOvD,GAAOwD,SAAS,EAAG,I","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/06-timer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","import '../css/common.css';\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  clockface: document.querySelector('.js-clockface'),\n};\n\nclass Timer {\n  constructor({ onTick }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTick = onTick;\n\n    this.init()\n  }\n\n  init() {\n    const time = getTimeComponents(0);\n    this.onTick(time);\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      // console.log(deltaTime);\n      const time = getTimeComponents(deltaTime);\n      // console.log(this.onTick);\n      this.onTick(time);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n    const time = getTimeComponents(0);\n    console.log(time);\n    this.onTick(time);\n  }\n};\n\n\nrefs.startBtn.addEventListener('click', () => {\n  timer.start();\n});\nrefs.stopBtn.addEventListener('click', () => {\n  timer.stop();\n});\n\n\nconst timer = new Timer({ onTick: updateClockface });\n\n\nfunction updateClockface({ hours, mins, secs }) {\n  refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n}\n\nfunction getTimeComponents(time) {\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  );\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  return { hours, mins, secs };\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\n\n// const timer = {\n//   intervalId: null,\n//   isActive: false,\n\n//   start() {\n//     if (this.isActive) {\n//       return;\n//     }\n//     const startTime = Date.now();\n//     this.isActive = true;\n\n//     this.intervalId = setInterval(() => {\n//       const currentTime = Date.now();\n//       const deltaTime = currentTime - startTime;\n//       const time = getTimeComponents(deltaTime);\n\n//       updateClockface(time);\n//     }, 1000);\n//   },\n//   stop() {\n//     clearInterval(this.intervalId);\n//     this.isActive = false;\n//   },\n// };\n\n// /*\n//  * Принимает число, приводит к строке и добавляет в начало 0 если число меньше 2-х знаков\n//  */\n// function pad(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// /*\n//  * - Принимает время в миллисекундах\n//  * - Высчитывает сколько в них вмещается часов/минут/секунд\n//  * - Возвращает обьект со свойствами hours, mins, secs\n//  * - Адская копипаста со стека 💩\n//  */\n// function getTimeComponents(time) {\n//   const hours = pad(\n//     Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//   );\n//   const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//   const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n//   return { hours, mins, secs };\n// }\n\n// function updateClockface({ hours, mins, secs }) {\n//   refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n// }\n\n// const timer = {\n//   start() {\n//     const startTime = Date.now();\n\n//     setInterval(() => {\n//       console.log('startTime', startTime);\n//       console.log(\"123\");\n//     },1000)\n\n//   },\n\n// };\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$565ec17452d3e51b$var$refs","startBtn","document","querySelector","stopBtn","clockface","$565ec17452d3e51b$var$Timer","Timer","param","onTick","this","intervalId","isActive","init","time","$565ec17452d3e51b$var$getTimeComponents","startTime","Date","now","setInterval","_this","clearInterval","console","log","addEventListener","$565ec17452d3e51b$var$timer","start","stop","hours","mins","secs","textContent","concat","$565ec17452d3e51b$var$pad","Math","floor","String","padStart"],"version":3,"file":"06-timer.1299134e.js.map"}